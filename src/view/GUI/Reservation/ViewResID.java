package view.GUI.Reservation;

import controller.BookingResource;
import model.Reservation.Reservation;
import view.GUI.Main_GUI;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.HashMap;
import java.util.Map;

public class ViewResID extends JFrame {
    private JButton okButton;
    private JButton mainMenuButton;
    private JTextField textField1;
    private JPanel viewRES;

    public ViewResID(BookingResource bookingResource) {
        setContentPane(this.viewRES);
        setTitle("UNIVERSITY ROOM BOOKING APPLICATION");
        setSize(450, 450);
        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        setVisible(true);
        mainMenuButton.addActionListener(new ActionListener() {
            /**
             * Invoked when an action occurs.
             *
             * @param e the event to be processed
             */
            @Override
            public void actionPerformed(ActionEvent e) {
                dispose();
                new Main_GUI(bookingResource);
            }
        });
        okButton.addActionListener(new ActionListener() {
            /**
             * Invoked when an action occurs.
             *
             * @param e the event to be processed
             */
            @Override
            public void actionPerformed(ActionEvent e) {
                String emailID = textField1.getText().trim();

                Map<String, Reservation> viewResID = new HashMap<>();
                try {
                    if (emailID.isEmpty()) {
                        throw new IllegalArgumentException("Text Field Cannot be Empty");
                    }
                    bookingResource.checkUser(emailID);
                    viewResID = bookingResource.viewResName(emailID);
                    for (Map.Entry<String, Reservation> entry : viewResID.entrySet()) {
                        JOptionPane.showMessageDialog(viewRES, "Booking ID: " + entry.getValue().getBookingID() + ", " + entry.getValue().getEmail() + " has a reservation in " + entry.getValue().getBuildingName() + " and has booked the room: " + entry.getValue().getRoom() + " @ " + entry.getValue().getCheckInDate() + ":" + entry.getValue().getCheckInTime() + ".The User exits @ " + entry.getValue().getCheckOutDate() + ":" + entry.getValue().getCheckOutTime() + "." + "\n");
                    }
                } catch (IllegalArgumentException ex) {
                    String error = ex.getLocalizedMessage();
                    JOptionPane.showMessageDialog(viewRES, error);
                }
            }
        });
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        viewRES = new JPanel();
        viewRES.setLayout(new GridBagLayout());
        okButton = new JButton();
        okButton.setText("Ok");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 3;
        viewRES.add(okButton, gbc);
        final JPanel spacer1 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 3;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        viewRES.add(spacer1, gbc);
        final JPanel spacer2 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 5;
        gbc.fill = GridBagConstraints.VERTICAL;
        viewRES.add(spacer2, gbc);
        mainMenuButton = new JButton();
        mainMenuButton.setText("Main Menu");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 4;
        viewRES.add(mainMenuButton, gbc);
        textField1 = new JTextField();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        viewRES.add(textField1, gbc);
        final JLabel label1 = new JLabel();
        label1.setText("VIEW RESERVATION");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        viewRES.add(label1, gbc);
        final JLabel label2 = new JLabel();
        label2.setText("Email - ID");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        viewRES.add(label2, gbc);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return viewRES;
    }

    private void createUIComponents() {
        // TODO: place custom component creation code here
    }
}

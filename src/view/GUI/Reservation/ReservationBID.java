package view.GUI.Reservation;

import controller.BookingResource;
import model.Reservation.Reservation;
import view.GUI.Main_GUI;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.HashMap;
import java.util.Map;

public class ReservationBID extends JFrame {
    private JPanel resEmailID;
    private JTextField textField1;
    private JButton OKButton;
    private JButton backButton;

    public ReservationBID(BookingResource bookingResource) {
        setContentPane(this.resEmailID);
        setTitle("VIEWING RESERVATIONS BY EMAIL-ID");
        setSize(450, 450);
        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        setVisible(true);

        OKButton.addActionListener(new ActionListener() {
            /**
             * Invoked when an action occurs.
             *
             * @param e the event to be processed
             */
            @Override
            public void actionPerformed(ActionEvent e) {
                String bookingID = textField1.getText().trim();
                Map<String, Reservation> viewBookingIDRes = new HashMap<>();
                try {
                    if (bookingID.isEmpty()) {
                        throw new IllegalArgumentException("Text Fields cannot be empty.");
                    }
                    viewBookingIDRes = bookingResource.viewMyRes(bookingID);
                    for (Map.Entry<String, Reservation> entry : viewBookingIDRes.entrySet()) {
                        String key = entry.getKey();
                        Object value = entry.getValue();
                        JOptionPane.showMessageDialog(resEmailID, "Booking ID: " + entry.getValue().getBookingID() + ", " + entry.getValue().getEmail() + " has a reservation in " + entry.getValue().getBuildingName() + " and has booked the room: " + entry.getValue().getRoom() + " @ " + entry.getValue().getCheckInDate() + ":" + entry.getValue().getCheckInTime() + ".The User exits @ " + entry.getValue().getCheckOutDate() + ":" + entry.getValue().getCheckOutTime() + "\n");
                    }
                } catch (IllegalArgumentException ex) {
                    String error = ex.getLocalizedMessage();
                    JOptionPane.showMessageDialog(resEmailID, error);
                }
            }

        });
        backButton.addActionListener(new ActionListener() {
            /**
             * Invoked when an action occurs.
             *
             * @param e the event to be processed
             */
            @Override
            public void actionPerformed(ActionEvent e) {
                dispose();
                new Main_GUI(bookingResource);
            }
        });
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        resEmailID = new JPanel();
        resEmailID.setLayout(new GridBagLayout());
        final JLabel label1 = new JLabel();
        label1.setText("VIEW RESERVATION BY BOOKING ID");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.gridwidth = 2;
        resEmailID.add(label1, gbc);
        final JLabel label2 = new JLabel();
        label2.setText("BOOKING - ID");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 1;
        resEmailID.add(label2, gbc);
        textField1 = new JTextField();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        resEmailID.add(textField1, gbc);
        OKButton = new JButton();
        OKButton.setText("OK");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 3;
        resEmailID.add(OKButton, gbc);
        backButton = new JButton();
        backButton.setText("Back");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 4;
        resEmailID.add(backButton, gbc);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return resEmailID;
    }

}

package view.GUI.ROOMS;

import controller.BookingResource;
import model.Room.Room;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Map;

public class ViewRooms extends JFrame {
    private JPanel viewRooms;
    private JButton viewAllRoomsButton;
    private JButton backButton;

    public ViewRooms(BookingResource bookingResource) {
        setContentPane(this.viewRooms);
        setTitle("VIEW ALL ROOMS");
        setSize(450, 450);
        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        setVisible(true);
        backButton.addActionListener(new ActionListener() {
            /**
             * Invoked when an action occurs.
             *
             * @param e the event to be processed
             */
            @Override
            public void actionPerformed(ActionEvent e) {
                dispose();
                new Rooms(bookingResource);
            }
        });
        viewAllRoomsButton.addActionListener(new ActionListener() {
            /**
             * Invoked when an action occurs.
             *
             * @param e the event to be processed
             */
            @Override
            public void actionPerformed(ActionEvent e) {
                try {
                    Map<String, Room> rooms = (Map<String, Room>) bookingResource.viewRooms();
                    for (Map.Entry<String, Room> entry : rooms.entrySet()) {
                        Object buildingName = entry.getValue().getBuildingName();
                        Object roomName = entry.getValue().getRoomName();
                        JOptionPane.showMessageDialog(viewRooms, "Rooms :\n" + buildingName + " has the room " + roomName + "." + "\n");
                    }
                } catch (IllegalArgumentException ex) {
                    String error = ex.getLocalizedMessage();
                    JOptionPane.showMessageDialog(viewRooms, error);
                }
            }
        });
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        viewRooms = new JPanel();
        viewRooms.setLayout(new GridBagLayout());
        viewAllRoomsButton = new JButton();
        viewAllRoomsButton.setText("View All Rooms");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        viewRooms.add(viewAllRoomsButton, gbc);
        final JPanel spacer1 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        viewRooms.add(spacer1, gbc);
        final JPanel spacer2 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 3;
        gbc.fill = GridBagConstraints.VERTICAL;
        viewRooms.add(spacer2, gbc);
        backButton = new JButton();
        backButton.setText("Back");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        viewRooms.add(backButton, gbc);
        final JLabel label1 = new JLabel();
        label1.setText("VIEW ALL ROOMS");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        viewRooms.add(label1, gbc);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return viewRooms;
    }

}
